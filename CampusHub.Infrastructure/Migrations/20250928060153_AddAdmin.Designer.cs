// <auto-generated />
using System;
using CampusHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampusHub.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250928060153_AddAdmin")]
    partial class AddAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CampusHub.Domain.Entities.College", b =>
                {
                    b.Property<int>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollegeId"));

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CollegeId");

                    b.ToTable("Colleges");

                    b.HasData(
                        new
                        {
                            CollegeId = 1,
                            CollegeName = "College of Business and Accountancy"
                        },
                        new
                        {
                            CollegeId = 2,
                            CollegeName = "College of Criminal Justice Education"
                        },
                        new
                        {
                            CollegeId = 3,
                            CollegeName = "College of Education"
                        },
                        new
                        {
                            CollegeId = 4,
                            CollegeName = "College of Engineering"
                        },
                        new
                        {
                            CollegeId = 5,
                            CollegeName = "College of Law"
                        },
                        new
                        {
                            CollegeId = 6,
                            CollegeName = "College of Liberal Arts and Sciences"
                        },
                        new
                        {
                            CollegeId = 7,
                            CollegeName = "Graduate School"
                        });
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.MarketplaceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LikesCount")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<int>("MeetupPreference")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("Location");

                    b.HasIndex("SellerId");

                    b.HasIndex("UserID");

                    b.ToTable("MarketplaceItems");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.MarketplaceLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarketplaceItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("MarketplaceItemId", "UserId")
                        .IsUnique();

                    b.ToTable("MarketplaceLikes");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.ProgramEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollegeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("CollegeId");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Accountancy"
                        },
                        new
                        {
                            Id = 2,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Accounting Information System"
                        },
                        new
                        {
                            Id = 3,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Business Administration, Major in Financial Management"
                        },
                        new
                        {
                            Id = 4,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Business Administration, Major in Human Resource Management"
                        },
                        new
                        {
                            Id = 5,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Business Administration, Major in Marketing Management"
                        },
                        new
                        {
                            Id = 6,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Entrepreneurship"
                        },
                        new
                        {
                            Id = 7,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Hospitality Management"
                        },
                        new
                        {
                            Id = 8,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Office Administration"
                        },
                        new
                        {
                            Id = 9,
                            CollegeId = 1,
                            Name = "Bachelor of Science in Tourism Management"
                        },
                        new
                        {
                            Id = 10,
                            CollegeId = 2,
                            Name = "Bachelor of Science in Criminology"
                        },
                        new
                        {
                            Id = 11,
                            CollegeId = 3,
                            Name = "Bachelor in Secondary Education Major in English"
                        },
                        new
                        {
                            Id = 12,
                            CollegeId = 3,
                            Name = "Bachelor in Secondary Education Major in English - Chinese"
                        },
                        new
                        {
                            Id = 13,
                            CollegeId = 3,
                            Name = "Bachelor in Secondary Education Major in Science"
                        },
                        new
                        {
                            Id = 14,
                            CollegeId = 3,
                            Name = "Bachelor in Secondary Education Major in Technology and Livelihood Education"
                        },
                        new
                        {
                            Id = 15,
                            CollegeId = 3,
                            Name = "Bachelor of Early Childhood Education"
                        },
                        new
                        {
                            Id = 16,
                            CollegeId = 3,
                            Name = "Certificate in Professional Education"
                        },
                        new
                        {
                            Id = 17,
                            CollegeId = 3,
                            Name = "Elementary | Secondary | P.E."
                        },
                        new
                        {
                            Id = 18,
                            CollegeId = 4,
                            Name = "Bachelor of Science in Computer Engineering"
                        },
                        new
                        {
                            Id = 19,
                            CollegeId = 4,
                            Name = "Bachelor of Science in Electrical Engineering"
                        },
                        new
                        {
                            Id = 20,
                            CollegeId = 4,
                            Name = "Bachelor of Science in Electronics Engineering"
                        },
                        new
                        {
                            Id = 21,
                            CollegeId = 4,
                            Name = "Bachelor of Science in Industrial Engineering"
                        },
                        new
                        {
                            Id = 22,
                            CollegeId = 5,
                            Name = "Law"
                        },
                        new
                        {
                            Id = 23,
                            CollegeId = 6,
                            Name = "AB Political Science"
                        },
                        new
                        {
                            Id = 24,
                            CollegeId = 6,
                            Name = "BA Communication"
                        },
                        new
                        {
                            Id = 25,
                            CollegeId = 6,
                            Name = "Bachelor of Public Administration"
                        },
                        new
                        {
                            Id = 26,
                            CollegeId = 6,
                            Name = "Bachelor of Public Administration (SPECIAL PROGRAM)"
                        },
                        new
                        {
                            Id = 27,
                            CollegeId = 6,
                            Name = "Bachelor of Science in Computer Science"
                        },
                        new
                        {
                            Id = 28,
                            CollegeId = 6,
                            Name = "Bachelor of Science in Entertainment and Multimedia Computing"
                        },
                        new
                        {
                            Id = 29,
                            CollegeId = 6,
                            Name = "Bachelor of Science in Information System"
                        },
                        new
                        {
                            Id = 30,
                            CollegeId = 6,
                            Name = "Bachelor of Science in Information Technology"
                        },
                        new
                        {
                            Id = 31,
                            CollegeId = 6,
                            Name = "Bachelor of Science in Mathematics"
                        },
                        new
                        {
                            Id = 32,
                            CollegeId = 6,
                            Name = "Bachelor of Science in Psychology"
                        },
                        new
                        {
                            Id = 33,
                            CollegeId = 7,
                            Name = "Doctor in Public Administration"
                        },
                        new
                        {
                            Id = 34,
                            CollegeId = 7,
                            Name = "Doctor of Philosophy, Major in Educational Management"
                        },
                        new
                        {
                            Id = 35,
                            CollegeId = 7,
                            Name = "Master in Public Administration"
                        },
                        new
                        {
                            Id = 36,
                            CollegeId = 7,
                            Name = "Master of Arts in Education, Major in Educational Management"
                        },
                        new
                        {
                            Id = 37,
                            CollegeId = 7,
                            Name = "Master of Arts in Education, Major in Teaching in the Early Grades"
                        },
                        new
                        {
                            Id = 38,
                            CollegeId = 7,
                            Name = "Master of Arts in Education, Major in Teaching Science"
                        },
                        new
                        {
                            Id = 39,
                            CollegeId = 7,
                            Name = "Master of Business Administration"
                        },
                        new
                        {
                            Id = 40,
                            CollegeId = 7,
                            Name = "Master of Science in Criminal Justice, Major in Criminology"
                        });
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("MarketplaceItemId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReporterUserID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResolvedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("MarketplaceItemId");

                    b.HasIndex("ReporterUserID");

                    b.HasIndex("ResolvedByUserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.PrimitiveCollection<string>("MeetupPreferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramID")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StudentNumber")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("YearLevelId")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("YearLevelId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 999,
                            DateRegistered = new DateTime(2025, 9, 28, 13, 50, 0, 0, DateTimeKind.Utc),
                            Email = "admin@ucc.edu.ph",
                            FullName = "System Administrator",
                            MeetupPreferences = "[]",
                            Password = "admin123",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.YearLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("YearLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1st Year"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2nd Year"
                        },
                        new
                        {
                            Id = 3,
                            Name = "3rd Year"
                        },
                        new
                        {
                            Id = 4,
                            Name = "4th Year"
                        },
                        new
                        {
                            Id = 5,
                            Name = "5th Year"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Graduate"
                        });
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.MarketplaceItem", b =>
                {
                    b.HasOne("CampusHub.Domain.Entities.User", null)
                        .WithMany("MarketplaceItems")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.MarketplaceLike", b =>
                {
                    b.HasOne("CampusHub.Domain.Entities.MarketplaceItem", "MarketplaceItem")
                        .WithMany("Likes")
                        .HasForeignKey("MarketplaceItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusHub.Domain.Entities.User", null)
                        .WithMany("MarketplaceLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarketplaceItem");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.ProgramEntity", b =>
                {
                    b.HasOne("CampusHub.Domain.Entities.College", "College")
                        .WithMany("Programs")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("College");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.Report", b =>
                {
                    b.HasOne("CampusHub.Domain.Entities.MarketplaceItem", "MarketplaceItem")
                        .WithMany()
                        .HasForeignKey("MarketplaceItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CampusHub.Domain.Entities.User", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CampusHub.Domain.Entities.User", "ResolvedByUser")
                        .WithMany()
                        .HasForeignKey("ResolvedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("MarketplaceItem");

                    b.Navigation("Reporter");

                    b.Navigation("ResolvedByUser");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.User", b =>
                {
                    b.HasOne("CampusHub.Domain.Entities.ProgramEntity", "Program")
                        .WithMany("Users")
                        .HasForeignKey("ProgramID");

                    b.HasOne("CampusHub.Domain.Entities.YearLevel", "YearLevel")
                        .WithMany("Users")
                        .HasForeignKey("YearLevelId");

                    b.Navigation("Program");

                    b.Navigation("YearLevel");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.College", b =>
                {
                    b.Navigation("Programs");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.MarketplaceItem", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.ProgramEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.User", b =>
                {
                    b.Navigation("MarketplaceItems");

                    b.Navigation("MarketplaceLikes");
                });

            modelBuilder.Entity("CampusHub.Domain.Entities.YearLevel", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
